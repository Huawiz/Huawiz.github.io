<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Huawiz&#39;s DB</title>
  
  
  <link href="http://huawiz.github.com/atom.xml" rel="self"/>
  
  <link href="http://huawiz.github.com/"/>
  <updated>2022-11-02T10:03:06.000Z</updated>
  <id>http://huawiz.github.com/</id>
  
  <author>
    <name>Justin Wu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Powershell基礎教學</title>
    <link href="http://huawiz.github.com/2022/08/31/from-get-help-to-use-powershell/"/>
    <id>http://huawiz.github.com/2022/08/31/from-get-help-to-use-powershell/</id>
    <published>2022-08-30T16:00:00.000Z</published>
    <updated>2022-11-02T10:03:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>這篇文章想分享下，最近準備挑戰向新人介紹的Powershell基礎使用，也順便透過整理資料來加深自己這方面的基礎，裡面也有給一些練習題，如果你剛好路過也可以做做看。</p><span id="more"></span><p>注：原始文件寫在OneNote上，在轉換成Markdown的過程已盡量修改成部落格版本的寫法。</p><br><!-- toc --><br><h1 id="簡單介紹"><a href="#簡單介紹" class="headerlink" title="簡單介紹"></a>簡單介紹</h1><p>Powershell是微軟推出的CLI，擁有以下特性:</p><ol><li>一致性的指令命名規則</li></ol><blockquote><p>所有”官方”指令都遵守 <code>​Verb-Noun</code>​ ，例如<code> ​get-help​ </code></p></blockquote><ol start="2"><li>內建強大的Cmdlet(command-let)</li><li>具有Scripts的功能</li></ol><blockquote><p>可以透過編寫Code，把指令像是樂高一樣組成我們想要的樣子。</p></blockquote><p>每個指令都是以動詞+名詞(通常是單數)的方式組成，而使用每個指令時，以<code>-parameters</code>表示參數。</p><p>例如: <code>get-command -verb write -none host</code></p><p>get-command 指令</p><p>-verb,-none 參數</p><p>write 是 -verb的參數內容；host是-none的參數內容</p><hr><h1 id="常用快捷鍵"><a href="#常用快捷鍵" class="headerlink" title="常用快捷鍵"></a>常用快捷鍵</h1><table><thead><tr><th>快捷鍵</th><th>Memo</th></tr></thead><tbody><tr><td><code>Tab</code></td><td>最常用的快捷鍵，可以自動完成指令、參數名稱。</td></tr><tr><td><code>Ctrl+C</code></td><td>停止目前指令</td></tr><tr><td><code>Ctrl+L</code></td><td>清除畫面</td></tr><tr><td><code>(Ctrl+Shift+)Pageup</code></td><td>切到上一面</td></tr><tr><td><code>(Ctrl+Shift+)Pagedown</code></td><td>切到下一面</td></tr></tbody></table><hr><h1 id="get-help-by-yourself-救你自己！"><a href="#get-help-by-yourself-救你自己！" class="headerlink" title="get-help by yourself(救你自己！)"></a>get-help by yourself(救你自己！)</h1><p>一般我們在編寫Powershell指令時，由於Powershell的功能實在太強大，有太多的指令我們無法全部記住，所以我們必須學會使用內建的手冊，來查找我們要使用的指令。</p><table><thead><tr><th>指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td><code>update-help​</code></td><td>更新Powershell的說明文件</td><td></td></tr><tr><td><code>get-help &lt;功能&gt;</code></td><td>用來查看說明文件</td><td>取得<code>hyper-v</code>有關的指令或說明檔<br><code>​get-help *hyper-v*</code></td></tr><tr><td><code>get-command &lt;功能&gt;</code></td><td>用來查找相關指令</td><td>查找和Hyper-V有關的指令<br>​​<code>get-command -Module hyper-v</code></td></tr><tr><td><code>get-member &lt;物件&gt;</code></td><td>查詢或指令相關的Properties</td><td>看<code>$x</code>物件的屬性<br>​<code>get-member -InputObject $x</code><br>or<br><code>$x|get-member</code></td></tr></tbody></table><p><strong>注意</strong></p><p><code>get-help</code> <code>*hyper-v*</code> 直接執行可能會顯示不出結果，但是寫在<code>get-command -Module hyper-v</code>之後卻可以，所以或許兩個指令有對應關係，在查找指令時最好先用<code>get-command</code>找到未知的指令後，再使用<code>get-help</code>來查使用方式。</p><hr><h1 id="常用CLI指令"><a href="#常用CLI指令" class="headerlink" title="常用CLI指令"></a>常用CLI指令</h1><p>因為不確定是否每個人都有使用CLI的經驗，所以特別列一些時常用來檔案管理的幾個指令（最常用的）。</p><table><thead><tr><th>指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td><code>cd</code></td><td>到指定目錄</td><td><code>cd C:\\</code></td></tr><tr><td><code>mkdir</code></td><td>建立資料夾</td><td><code>mkdir newfolder</code></td></tr><tr><td><code>rm</code></td><td>刪除檔案</td><td><code>rm test.txt</code></td></tr><tr><td><code>cls</code></td><td>清空畫面</td><td></td></tr><tr><td><code>pwd</code></td><td>查看現在目錄</td><td></td></tr><tr><td><code>echo</code></td><td>寫資料</td><td><code>echo &quot;Hello&quot; &gt; World.txt</code></td></tr><tr><td><code>Notepad</code></td><td>打開記事本</td><td><code>Notepad &lt;路徑&gt;</code></td></tr><tr><td><code>code</code></td><td>有裝VSCODE的話，可以直接用這個指令打開文件編輯程式碼</td><td><code>code &lt;路徑&gt;</code></td></tr></tbody></table><p>其他縮寫可以透過<code>get-alias | select name,definition</code>來查看縮寫與原始指令。</p><hr><h1 id="特殊符號"><a href="#特殊符號" class="headerlink" title="特殊符號"></a>特殊符號</h1><p>特殊符號： <a href="https://docs.microsoft.com/zh-tw/powershell/exchange/exchange-cmdlet-syntax">Exchange Cmdlet 語法 | Microsoft</a></p><table><thead><tr><th><strong>符號</strong></th><th><strong>說明</strong></th><th><strong>範例</strong></th></tr></thead><tbody><tr><td><code>$</code></td><td>代表參數</td><td><code>$h = get-help</code></td></tr><tr><td><code>|</code></td><td>Pipeline，串接指令用的水管符號</td><td><code>get-alias|select name</code></td></tr><tr><td><code>&gt;</code></td><td>把指令產生結果輸出成某檔案<br>(會覆寫)</td><td><code>get-process &gt; Process.txt</code></td></tr><tr><td><code>&gt;&gt;</code></td><td>把指令產生結果輸出成某檔案<br>(檔案存在的話會在後面加入)</td><td><code>get-process &gt;&gt; Process.txt</code></td></tr><tr><td><code>*</code></td><td>1.比對字串<br>2.乘法運算<br>3.重複字串</td><td>1.<code>get-help *keyword*</code><br>2.<code>$a * $b</code><br>3.”test”*3 –&gt; testtesttest</td></tr><tr><td><code>[]</code></td><td>拿來指定索引(index)、資料型態</td><td>指定索引:<code>$array[3]</code><br>指定資料型態:<code>$b = [string]$a</code> <br><img src="https://i.imgur.com/gE5R4FC.png" alt="file"></td></tr><tr><td><code>&#123;&#125;</code></td><td>用來包指令間的運算式的符號</td><td>見<code>@</code>的範例</td></tr><tr><td><code>..</code></td><td>表示之間，例如$array[2..5]，會回傳array中第二個到第五個間的值</td><td>見<code>@</code>的範例</td></tr><tr><td><code>$_</code></td><td>表示”每一個”物件，只有在執行指令的範圍有效，例如：<br><code>$x[0..5].foreach(&#123;$_*$_&#125;)</code><br>表示0~5每個數字的平方數</td><td>見<code>@</code>的範例</td></tr><tr><td><code>@</code></td><td>作為關聯陣列的符號</td><td><img src="https://i.imgur.com/gmEIatG.png" alt="Image"></td></tr><tr><td><code>%</code></td><td>1.在運算式裡面作為”取餘數”的符號<br>2.在<code>|</code>後面作為foreach的速記符號</td><td><img src="https://i.imgur.com/U9YC4p4.png" alt="Image"></td></tr><tr><td><code>?</code></td><td>where的速記符號</td><td><img src="https://i.imgur.com/KrG3r6O.png" alt="Image"></td></tr></tbody></table><hr><h1 id="比較參數"><a href="#比較參數" class="headerlink" title="比較參數"></a>比較參數</h1><p>另外在Powershell的運算式(在{}裡面，見上面範例)中，是使用預留的參數作為比較用途，而非使用符號<code>=</code>,<code>&gt;</code>,<code>&lt;</code>，原因在於Powershell除了可以比較數值大小，也可以比較字串，為了應付不同的比較方式，採用更多種預留參數作為比較運算子。<a href="https://docs.microsoft.com/zh-tw/powershell/module/microsoft.powershell.core/about/about_comparison_operators?view=powershell-7.2">about_Comparison_Operators</a></p><p><img src="https://i.imgur.com/eqHp7NZ.png" alt="Image"></p><p>查看差異:</p><p><img src="https://i.imgur.com/DEGrggs.png" alt="file"></p><p>由此可知，<code>=</code>用來定義參數，而<code>-eq</code>用來判斷,回傳<code>$true</code> or <code>$false</code></p><hr><h1 id="自動變數"><a href="#自動變數" class="headerlink" title="自動變數"></a>自動變數</h1><p><a href="https://docs.microsoft.com/zh-tw/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7.2">關於自動變數 - PowerShell | Microsoft Docs</a></p><table><thead><tr><th>參數</th><th>Memo</th></tr></thead><tbody><tr><td><code>$Profile</code></td><td>一個預設拿來存Powershell設定檔的內建參數，可以在此設定每次打開Powershell要載入的函數、模組。<br><strong>也可以在這定義平常會用到的參數作為自動變數</strong></td></tr><tr><td><code>$Error</code></td><td>顯示近期發生的錯誤訊息。</td></tr></tbody></table><hr><h1 id="資料結構"><a href="#資料結構" class="headerlink" title="資料結構"></a>資料結構</h1><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><p><a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.2">您想知道有關於陣列的一切 - PowerShell | Microsoft Docs</a></p><p>算矩陣(供參考)</p><p>對​​​​​$\begin{bmatrix}1&amp;2&amp;3 \\ 4&amp;5&amp;6 \\ 7&amp;8&amp;9\end{bmatrix}$​​​​​做運算</p><p>(橫的為Row列，直的為Col欄，索引從0開始)</p><table><thead><tr><th>Operate</th><th>Example</th></tr></thead><tbody><tr><td>Matrix</td><td><code>$matrix = @(@(1,2,3),@(4,5,6),@(7,8,9))</code></td></tr><tr><td>row</td><td><code>$row = $matrix[0]</code></td></tr><tr><td>col</td><td><code>$col = $matrix | %&#123;$_[0]&#125;</code></td></tr></tbody></table><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><table><thead><tr><th>Action</th><th>Memo</th></tr></thead><tbody><tr><td>列加法</td><td>第0列+第1列<br>  <code>for($i=0;$i -le $matrix.Length;$i++)&#123;$matrix[0][$i]+$matrix[1][$i]&#125;</code></td></tr></tbody></table><p><img src="https://i.imgur.com/xVyb9GL.png" alt="file"></p><table><thead><tr><th>Action</th><th>Memo</th></tr></thead><tbody><tr><td>欄加法</td><td>第0行+第1行<br>  <code>$matrix | %&#123;$_[0]+$_[1]&#125;</code></td></tr></tbody></table><p><img src="https://i.imgur.com/9kDHUJe.png" alt="file"></p><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><table><thead><tr><th>Action</th><th>Memo</th></tr></thead><tbody><tr><td>欄乘列</td><td>欄乘列<br>$\begin{bmatrix} 1 \\ 4 \\ 7 \end{bmatrix}$ * $\begin{bmatrix}1&amp;2&amp;3\end{bmatrix}&#x3D;\begin{bmatrix}1∗1&amp;1∗2&amp;1∗3 \\ 4∗1&amp;4∗2&amp;4∗3 \\ 7∗1&amp;7∗2&amp;7∗3\end{bmatrix}&#x3D;\begin{bmatrix}1&amp;2&amp;3 \\ 4&amp;8&amp;12 \\ 7&amp;14&amp;21\end{bmatrix}$<br><br><code>for($j=0;$j-lt$col.length;$j++)&#123;$elements[$j]=for($i=0;$i -lt $row.length;$i++)&#123;$col[$j]*$row[$i]&#125;&#125;</code><br></td></tr></tbody></table><p><img src="https://i.imgur.com/I0fcrQk.png" alt="file"></p><table><thead><tr><th>Action</th><th>Memo</th></tr></thead><tbody><tr><td>列乘欄</td><td>列乘欄<br> $\begin{bmatrix}1&amp;2&amp;3\end{bmatrix}$*$\begin{bmatrix} 1 \\ 4 \\ 7 \end{bmatrix}$ = 1*1+2*4+3*7&#x3D;30  <br>  <code>$elements = for($i=0;$i-lt$row.Length;$i++)&#123;$row[$i] * $col[$i]&#125;</code> <br> <code>$sum = ($elements | Measure-Object -sum).sum</code></td></tr></tbody></table><p><img src="https://i.imgur.com/btbjhNB.png" alt="file"></p><h2 id="Hashtable"><a href="#Hashtable" class="headerlink" title="Hashtable"></a>Hashtable</h2><p><a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-hashtable?view=powershell-7.2">您想知道有關雜湊表的一切 - PowerShell | Microsoft Docs</a></p><p>可以用來對群組資料做分類，例如今天有個表格資料</p><table><thead><tr><th>Group</th><th>Domain</th><th>IP</th></tr></thead><tbody><tr><td>AD</td><td>ad.company.ad</td><td>192.168.0.3</td></tr><tr><td>Server1</td><td>server1.company.ad</td><td>192.168.0.4</td></tr><tr><td>Server2</td><td>server2.company.ad</td><td>192.168.0.5</td></tr></tbody></table><p>可以使用hashtable來存資料</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$group</span> = <span class="selector-tag">@</span>&#123;</span><br><span class="line">ADDC = <span class="selector-tag">@</span>&#123;Domain = <span class="string">&quot;addc.company.ad&quot;</span>;IP=<span class="string">&quot;192.168.0.3&quot;</span>&#125;</span><br><span class="line">Server1 = <span class="selector-tag">@</span>&#123;Domain = <span class="string">&quot;server1.company.ad&quot;</span>;IP=<span class="string">&quot;192.168.0.4&quot;</span>&#125;</span><br><span class="line">Server2 = <span class="selector-tag">@</span>&#123;Domain = <span class="string">&quot;server2.company.ad&quot;</span>;IP=<span class="string">&quot;192.168.0.5&quot;</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此一來，就能使用Properties來查這個表格內的相關資料<br><img src="https://i.imgur.com/UsaOXp9.png" alt="file"></p><hr><h1 id="Exercises"><a href="#Exercises" class="headerlink" title="Exercises"></a>Exercises</h1><h2 id="查找題"><a href="#查找題" class="headerlink" title="查找題"></a>查找題</h2><ol><li>執行<code>update-help</code></li><li>使用<code>get-help get-content </code>來學習如何使用此指令<br>  a. 使用<code>get-help get-content -example</code> 來查看範例<br>  b. 使用<code>get-help get-content -onlinn</code> 連去微軟網站看此指令的說明</li></ol><h2 id="基本檔案操作-計算-輸出結果題"><a href="#基本檔案操作-計算-輸出結果題" class="headerlink" title="基本檔案操作+計算+輸出結果題"></a>基本檔案操作+計算+輸出結果題</h2><ol><li>在C槽建立一個名為 ​pwsh​ 的資料夾，並且到此目錄底下</li><li>建立一個名為 ​ ​ ​<code>Cube.txt</code>​ ​ ​ 的文字檔案</li><li>對0~20取立方，輸出結果至<code>Cube.txt</code></li><li>使用指令在CLI介面查看 ​ ​<code>Cube.txt​</code> ​ 的內容</li></ol><p>如圖</p><p><img src="https://i.imgur.com/CmMTmeJ.png" alt="Image"></p><hr><h2 id="衍生題"><a href="#衍生題" class="headerlink" title="衍生題"></a>衍生題</h2><ol><li>請對上面<code>Cube.txt</code>的檔案裡的每個數字，標示出是奇數(odd)或偶數(even)</li></ol><p>如圖</p><p><img src="https://i.imgur.com/Gf2aXrE.png" alt="file"></p><p>hint: <code>$x.tostring</code></p><ol start="2"><li>把上面那題改用雜湊表(hashtable)表示</li></ol><p><img src="https://i.imgur.com/5ZLXvqJ.png" alt="file"></p><hr><h2 id="情境題"><a href="#情境題" class="headerlink" title="情境題"></a>情境題</h2><p>(請自行創空白的txt練習)</p><blockquote><p>今天有個檔案夾內的檔案，裡面的檔案名稱因為不明原因全部都有相同的錯誤，請用Powershell來快速修正檔案名稱。</p></blockquote><p>範例: Error_NAME_file01.txt –&gt; Correct_Name_file01.txt</p><p>hint: Rename-Item,get-childItem</p><hr><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>get-help<br><a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/ps101/02-help-system?view=powershell-7.2">說明系統 - PowerShell | Microsoft Docs</a></p><p>特殊符號<br><a href="https://docs.microsoft.com/zh-tw/powershell/exchange/exchange-cmdlet-syntax">Exchange Cmdlet 語法 | Microsoft</a></p><p>比較參數</p><p><a href="https://docs.microsoft.com/zh-tw/powershell/module/microsoft.powershell.core/about/about_comparison_operators?view=powershell-7.2">about_Comparison_Operators</a></p><p>資料結構<br><a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.2">您想知道有關於陣列的一切 - PowerShell | Microsoft Docs</a><br><a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/deep-dives/everything-about-hashtable?view=powershell-7.2">您想知道有關雜湊表的一切 - PowerShell | Microsoft Docs</a></p><p>快捷鍵</p><p><a href="https://ithelp.ithome.com.tw/articles/10027481">Windows PowerShell 基本操作 - 熱鍵 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天 (ithome.com.tw)</a>|</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;這篇文章想分享下，最近準備挑戰向新人介紹的Powershell基礎使用，也順便透過整理資料來加深自己這方面的基礎，裡面也有給一些練習題，如果你剛好路過也可以做做看。&lt;/p&gt;</summary>
    
    
    
    <category term="Powershell" scheme="http://huawiz.github.com/categories/Powershell/"/>
    
    
    <category term="Powershell" scheme="http://huawiz.github.com/tags/Powershell/"/>
    
  </entry>
  
  <entry>
    <title>使用Powershell控制Word文件</title>
    <link href="http://huawiz.github.com/2022/08/16/control-word-with-pwsh/"/>
    <id>http://huawiz.github.com/2022/08/16/control-word-with-pwsh/</id>
    <published>2022-08-15T16:00:00.000Z</published>
    <updated>2022-09-06T05:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>同樣上一篇，因為工作上常要編輯Word檔案，要把文件轉成A4大小，並且做段落換行的動作。而又同樣的，一份文件要做一次，一百份文件要做一百次，麻煩!所以才有了這篇，來研究如何使用Powershell來做這個設定格式的動作，來省去工作上的一些步驟。</p><span id="more"></span><!-- toc --><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>此ps1可以自動開啟Word檔案&gt;轉為A4格式&gt;設定文件段落自動換行(<code>$paras.WordWrap = 0</code>)&gt;存檔&gt;退出Word</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VBA 參數: https://docs.microsoft.com/zh-tw/office/vba/library-reference/concepts/getting-started-with-vba-in-office</span></span><br><span class="line"><span class="comment"># VBA api: https://docs.microsoft.com/zh-tw/office/vba/api/word(enumerations)</span></span><br><span class="line"><span class="keyword">param</span>(</span><br><span class="line">    [<span class="type">parameter</span>(<span class="type">position</span>=<span class="number">0</span>)]</span><br><span class="line">    [<span class="built_in">string</span>] <span class="variable">$Path</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$docFiles</span> = (<span class="built_in">Get-ChildItem</span> <span class="variable">$Path</span> <span class="literal">-Include</span> *.docx,*.doc <span class="literal">-Recurse</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$word</span> = <span class="built_in">New-Object</span> <span class="literal">-com</span> Word.Application</span><br><span class="line"></span><br><span class="line"><span class="comment"># 顯示word動作畫面，建議設為$False，打開介面會變慢</span></span><br><span class="line"><span class="comment"># $word.visible = $true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$docFile</span> <span class="keyword">in</span> <span class="variable">$docFiles</span>) &#123;</span><br><span class="line">    <span class="comment">#簡易進度條</span></span><br><span class="line">    <span class="built_in">Write-Progress</span> <span class="literal">-Activity</span> <span class="string">&quot;Running ...&quot;</span> <span class="literal">-Status</span> <span class="string">&quot;Editting <span class="variable">$</span>&#123;docFile&#125;...&quot;</span> <span class="literal">-PercentComplete</span> (((<span class="variable">$docFiles</span>.indexof(<span class="variable">$docFile</span>) + <span class="number">1</span>) / <span class="variable">$docFiles</span>.count) * <span class="number">100</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">#開啟目錄Word檔案</span></span><br><span class="line">    <span class="variable">$doc</span> = <span class="variable">$word</span>.Documents.Open(<span class="variable">$docFile</span>.FullName)</span><br><span class="line">    <span class="variable">$docname</span> = <span class="variable">$docFile</span>.Name</span><br><span class="line">    <span class="comment">#轉換為A4大小</span></span><br><span class="line">    <span class="variable">$doc</span>.PageSetup.PaperSize = [<span class="type">Microsoft.Office.Interop.Word.WdPaperSize</span>]::wdPaperA4</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 設定自動換行</span></span><br><span class="line">    <span class="variable">$paras</span> = <span class="variable">$doc</span>.Paragraphs</span><br><span class="line">    <span class="variable">$paras</span>.WordWrap = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 存檔與關閉</span></span><br><span class="line">    <span class="variable">$doc</span>.Save()</span><br><span class="line">    <span class="variable">$doc</span>.Close()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#簡易介面</span></span><br><span class="line">    <span class="comment">#Write-Host &quot;$&#123;docname&#125; is finished.($(($docFiles.indexof($docFile) + 1)) / $($docFiles.count))&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Write-Progress</span> <span class="literal">-Completed</span> <span class="literal">-Activity</span> <span class="string">&quot;Finished.&quot;</span></span><br><span class="line"><span class="variable">$word</span>.Quit()</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Finished.&quot;</span></span><br><span class="line">cmd /c pause</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><p>此功能鍵立在.NET與VBA互通的原理上，運用Powershell去製作執行腳本。</p><hr><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$word</span> = <span class="built_in">New-Object</span> <span class="literal">-com</span> Word.Application</span><br></pre></td></tr></table></figure><p>Powershell以 <code>$word</code>參數去執行Word軟體</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$word</span>.visible = <span class="variable">$true</span> </span><br></pre></td></tr></table></figure><p>顯示Word執行動作(開啟後自動化工作會出現在螢幕上)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$word</span>.Quit() </span><br></pre></td></tr></table></figure><p>離開Word</p><hr><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 開啟檔案</span></span><br><span class="line"><span class="variable">$doc</span> = <span class="variable">$word</span>.Documents.Open(<span class="variable">$docFile</span>.FullName)</span><br><span class="line"><span class="comment"># 存檔與關閉</span></span><br><span class="line"><span class="variable">$doc</span>.Save()</span><br><span class="line"><span class="variable">$doc</span>.Close()</span><br></pre></td></tr></table></figure><p><code>$doc</code>為 <code>$word</code>的執行物件，用它開啟、儲存、關閉</p><hr><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設定自動換行</span></span><br><span class="line"><span class="variable">$paras</span> = <span class="variable">$doc</span>.Paragraphs</span><br><span class="line"><span class="variable">$paras</span>.WordWrap = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>使用 <code>$paras</code>儲存 <code>$doc</code>的所有段落，可以用 <code>$paras[index]</code>查看段落內容，而 <code>$paras.WordWrap = 0</code>則是設定所有段落文字，可自動換行。</p><h2 id="如何知道要抓取的參數"><a href="#如何知道要抓取的參數" class="headerlink" title="如何知道要抓取的參數?"></a>如何知道要抓取的參數?</h2><p>要如何知道要使用甚麼參數?<code>$paras.WordWrap</code>的WordWrap怎麼來的?</p><h3 id="解壓縮Word，查看XML檔案"><a href="#解壓縮Word，查看XML檔案" class="headerlink" title="解壓縮Word，查看XML檔案"></a>解壓縮Word，查看XML檔案</h3><p>直接創一個空白的Word檔案，使用你想使用的功能後，解壓縮此 <code>.doc</code>檔案，去查看原始的參數名稱為何</p><p><img src="https://i.imgur.com/nV9c9yb.png" alt="file"></p><p><img src="https://i.imgur.com/VJrrCoZ.png" alt="file"></p><p>由此猜測，這個執行動作是設定WordWrap的值為0</p><h3 id="從VBA-api網站找到相關物件的參數名稱"><a href="#從VBA-api網站找到相關物件的參數名稱" class="headerlink" title="從VBA api網站找到相關物件的參數名稱"></a>從VBA api網站找到相關物件的參數名稱</h3><p><code>&lt;a href=&quot;https://docs.microsoft.com/zh-tw/office/vba/api/word.paragraphs.wordwrap#syntax&quot;&gt;</code>(Word) 的 Paragraphs.WordWrap 屬性 | Microsoft Docs<code>&lt;/a&gt;</code></p><p>從微軟官方的api文件，可以找到有關於斷落(Paragraphs)的物件屬性，由此找到WordWrap。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><table><thead><tr><th>基本操作</th><th>用Powershell控制Word的辦法</th><th>參考Linkin上某大大的簡易教學</th><th><a href="https://www.linkedin.com/pulse/useful-powershell-commands-microsoft-word-automation-korivipadu"><code>連結</code></a></th></tr></thead><tbody><tr><td>VBA 參數</td><td>要找控制office的指令從這找線索</td><td>$doc.PageSetup.PaperSize</td><td><a href="https://docs.microsoft.com/zh-tw/office/vba/library-reference/concepts/getting-started-with-vba-in-office">連結</a></td></tr><tr><td>VBA 物件api</td><td>物件api</td><td>wdPaperA4</td><td><a href="https://docs.microsoft.com/zh-tw/office/vba/api/word(enumerations)">連結</a></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;同樣上一篇，因為工作上常要編輯Word檔案，要把文件轉成A4大小，並且做段落換行的動作。而又同樣的，一份文件要做一次，一百份文件要做一百次，麻煩!所以才有了這篇，來研究如何使用Powershell來做這個設定格式的動作，來省去工作上的一些步驟。&lt;/p&gt;</summary>
    
    
    
    <category term="Powershell" scheme="http://huawiz.github.com/categories/Powershell/"/>
    
    
    <category term="powershell" scheme="http://huawiz.github.com/tags/powershell/"/>
    
    <category term="懶人" scheme="http://huawiz.github.com/tags/%E6%87%B6%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>用Powershell快速建立Hyper-V的差異硬碟</title>
    <link href="http://huawiz.github.com/2022/07/27/control-VM-with-pwsh/"/>
    <id>http://huawiz.github.com/2022/07/27/control-VM-with-pwsh/</id>
    <published>2022-07-26T16:00:00.000Z</published>
    <updated>2022-09-06T05:53:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作上，常使用Hyper-V來練習架設環境，而每次想要再次練習就還要再按一次圖形化介面，一台按一次，n台就要按n次，麻煩！所以才會誕生這篇，研究了一下如何用簡單的powershell，來自動化「創建n次差異硬碟，並且掛載到虛擬機器上」這個動作。</p><span id="more"></span><!-- toc --><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#build-VHD -Path &#x27;E:\lab\test&#x27; -Parent &#x27;E:\VM\WinServer2019\base.vhdx&#x27; -List &quot;AD&quot;,&quot;Server1&quot;,&quot;Server2&quot;,&quot;Server3&quot;</span></span><br><span class="line"><span class="comment">#使用方式:build-VHD -Path &lt;你要建立的位置&gt; -Parent &lt;父系磁碟位置&gt; -List &lt;主機列表&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build-VHD</span></span> &#123;</span><br><span class="line">  <span class="keyword">Param</span> (</span><br><span class="line">    [<span class="type">parameter</span>(<span class="type">position</span> = <span class="number">0</span>, <span class="type">mandatory</span> = <span class="variable">$true</span>)][<span class="built_in">string</span>]<span class="variable">$Path</span>, </span><br><span class="line">    [<span class="type">parameter</span>(<span class="type">position</span> = <span class="number">1</span>, <span class="type">mandatory</span> = <span class="variable">$true</span>)][<span class="built_in">string</span>]<span class="variable">$Parent</span>, </span><br><span class="line">    [<span class="type">parameter</span>(<span class="type">ValueFromPipeline</span> = <span class="variable">$true</span>)][<span class="built_in">string</span>[]]<span class="variable">$List</span>,</span><br><span class="line">    [<span class="type">parameter</span>(<span class="type">position</span> = <span class="number">2</span>, <span class="type">mandatory</span> = <span class="variable">$false</span>)][<span class="type">Alias</span>(<span class="string">&quot;open&quot;</span>, <span class="string">&quot;run&quot;</span>)][<span class="type">switch</span>]<span class="variable">$openVM</span></span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">begin</span> &#123;</span><br><span class="line">    <span class="built_in">write-host</span> <span class="string">&quot;Begin.&quot;</span></span><br><span class="line">    <span class="comment"># 如果指定父系磁碟不存在即離開</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="operator">-not</span>(<span class="built_in">Test-Path</span> <span class="variable">$Parent</span>)) &#123;</span><br><span class="line">      <span class="built_in">write-host</span> <span class="string">&quot;The parent is not defined.&quot;</span></span><br><span class="line">      <span class="keyword">exit</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 如果指定目錄不存在，就建立目錄</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="operator">-not</span>(<span class="built_in">Test-Path</span> <span class="variable">$Path</span>)) &#123;</span><br><span class="line">      <span class="built_in">Write-Host</span> <span class="string">&quot;Build <span class="variable">$</span>&#123;Path&#125;&quot;</span></span><br><span class="line">      [<span class="built_in">void</span>](mkdir <span class="variable">$Path</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">write-host</span> <span class="string">&quot;<span class="variable">$</span>&#123;Path&#125; exists.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">process</span> &#123;</span><br><span class="line">    <span class="keyword">Foreach</span> (<span class="variable">$VMName</span> <span class="keyword">in</span> <span class="variable">$List</span>) &#123;</span><br><span class="line">      <span class="variable">$VHDPath</span> = <span class="string">&quot;<span class="variable">$</span>&#123;Path&#125;\<span class="variable">$</span>&#123;VMName&#125;.vhdx&quot;</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="operator">-not</span>(<span class="built_in">Test-Path</span> <span class="variable">$VHDPath</span>)) &#123;</span><br><span class="line">        <span class="comment"># 狀態表示</span></span><br><span class="line">        <span class="built_in">Write-Progress</span> <span class="literal">-Activity</span> <span class="string">&quot;Building VHD...&quot;</span> <span class="literal">-Status</span> <span class="string">&quot;Building <span class="variable">$</span>&#123;VMName&#125;...&quot;</span> <span class="literal">-PercentComplete</span> (((<span class="variable">$List</span>.indexof(<span class="variable">$VMName</span>) + <span class="number">1</span>) / <span class="variable">$List</span>.count) * <span class="number">100</span>)</span><br><span class="line">        <span class="comment"># 建立差異硬碟</span></span><br><span class="line">        [<span class="built_in">void</span>](<span class="built_in">new-vhd</span> <span class="literal">-path</span> <span class="variable">$VHDPath</span> <span class="literal">-ParentPath</span> <span class="variable">$Parent</span> <span class="literal">-diff</span>)</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$</span>&#123;VHDPath&#125; is finished.&quot;</span></span><br><span class="line">        <span class="comment"># 設定同名的硬碟到同名的主機</span></span><br><span class="line">        <span class="built_in">Set-VMHardDiskDrive</span> <span class="literal">-VMName</span> <span class="variable">$VMName</span> <span class="literal">-path</span> <span class="variable">$VHDPath</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$</span>&#123;VMName&#125; exists.&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment"># 順便開啟VM</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable">$openVM</span>) &#123;</span><br><span class="line">        <span class="keyword">Foreach</span> (<span class="variable">$VMName</span> <span class="keyword">in</span> <span class="variable">$List</span>) &#123;</span><br><span class="line">          <span class="built_in">start-vm</span> <span class="literal">-name</span> <span class="variable">$VMName</span></span><br><span class="line">          <span class="built_in">write-host</span> <span class="string">&quot;Running <span class="variable">$</span>&#123;VMName&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">end</span> &#123;</span><br><span class="line">    <span class="built_in">write-host</span> <span class="string">&quot;End.&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h1><h2 id="要先建好機器"><a href="#要先建好機器" class="headerlink" title="要先建好機器"></a>要先建好機器</h2><p>此指令要先建立好機器才能使用<br><img src="https://i.imgur.com/TKKynjB.png" alt="file"></p><h2 id="指令-1"><a href="#指令-1" class="headerlink" title="指令"></a>指令</h2><p><code>build-VHD -Path &#39;E:\lab\test&#39; -Parent &#39;E:\VM\WinServer2019\base.vhdx&#39; -List &quot;AD&quot;,&quot;Server1&quot;,&quot;Server2&quot;,&quot;Server3&quot;</code></p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p><code>build-VHD -Path &lt;你要建立的位置&gt; -Parent &lt;父系磁碟位置&gt; -List &lt;主機列表&gt;</code></p><h2 id="設定開啟pwsh載入函數"><a href="#設定開啟pwsh載入函數" class="headerlink" title="設定開啟pwsh載入函數"></a>設定開啟pwsh載入函數</h2><p>只需要使用notepad把上面的函數加進去後存成一個ps1檔案，開啟powershell輸入$profile，在裏頭加入<code>Import-module &lt;這個ps1檔案&gt;</code>，就可以在每次開啟的時候載入這個function。</p><p>註:<code>$profile</code> Powershell會在執行服務時，執行這檔案裡面的動作。</p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p><img src="https://i.imgur.com/5DmzeDx.png" alt="file"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近工作上，常使用Hyper-V來練習架設環境，而每次想要再次練習就還要再按一次圖形化介面，一台按一次，n台就要按n次，麻煩！所以才會誕生這篇，研究了一下如何用簡單的powershell，來自動化「創建n次差異硬碟，並且掛載到虛擬機器上」這個動作。&lt;/p&gt;</summary>
    
    
    
    <category term="Powershell" scheme="http://huawiz.github.com/categories/Powershell/"/>
    
    
    <category term="powershell" scheme="http://huawiz.github.com/tags/powershell/"/>
    
    <category term="懶人" scheme="http://huawiz.github.com/tags/%E6%87%B6%E4%BA%BA/"/>
    
  </entry>
  
</feed>
